-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity shift_pattern_gen_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    top_led_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    first_value : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of shift_pattern_gen_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "shift_pattern_gen_top_shift_pattern_gen_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p_CIV-fsva3824-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.283500,HLS_SYN_LAT=105,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=31,HLS_SYN_LUT=178,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_done : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_idle : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_ready : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_tmp_o_V_out : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_tmp_o_V_out_ap_vld : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_done : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_idle : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_ready : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_top_led_o : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_top_led_o_ap_vld : STD_LOGIC;
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component shift_pattern_gen_top_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        first_value : IN STD_LOGIC_VECTOR (2 downto 0);
        tmp_o_V_out : OUT STD_LOGIC_VECTOR (2 downto 0);
        tmp_o_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component shift_pattern_gen_top_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_o_V_reload : IN STD_LOGIC_VECTOR (2 downto 0);
        top_led_o : OUT STD_LOGIC_VECTOR (2 downto 0);
        top_led_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40 : component shift_pattern_gen_top_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start,
        ap_done => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_done,
        ap_idle => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_idle,
        ap_ready => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_ready,
        first_value => first_value,
        tmp_o_V_out => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_tmp_o_V_out,
        tmp_o_V_out_ap_vld => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_tmp_o_V_out_ap_vld);

    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47 : component shift_pattern_gen_top_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start,
        ap_done => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_done,
        ap_idle => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_idle,
        ap_ready => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_ready,
        tmp_o_V_reload => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_tmp_o_V_out,
        top_led_o => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_top_led_o,
        top_led_o_ap_vld => grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_top_led_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_ready = ap_const_logic_1)) then 
                    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_ready = ap_const_logic_1)) then 
                    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_done, grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (((grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_done)
    begin
        if ((grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_done)
    begin
        if ((grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start <= grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_ap_start_reg;
    grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start <= grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_76_1_fu_40_ap_start_reg;
    top_led_o <= grp_shift_pattern_gen_top_Pipeline_VITIS_LOOP_31_1_fu_47_top_led_o;
end behav;
